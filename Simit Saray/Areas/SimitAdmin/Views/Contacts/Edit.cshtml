@model Simit_Saray.Models.Contact

@{
    ViewBag.Title = "Edit";
    Layout = "~/Areas/SimitAdmin/Views/Shared/_AdminLayout.cshtml";
}

<h2>Edit</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Contact</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ID)

        <div class="form-group">
            @Html.LabelFor(model => model.Adress, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Adress, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Adress, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Contact1, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Contact1, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Contact1, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Phone2, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Phone2, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Phone2, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email2, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email2, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email2, "", new { @class = "text-danger" })
            </div>
        </div>

   
        <div class="form-group">
            @Html.LabelFor(model => model.Map, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Map, new { htmlAttributes = new { @class = "form-control",@id="mainMap" ,@type="hidden"} })
                @Html.ValidationMessageFor(model => model.Map, "", new { @class = "text-danger" })

                    <div data-map="@Model.Map" id="map"></div>
                    <script>
                    var map;
                    var mapElement = document.getElementById("map")
                    function initMap() {
                        var locationMap = mapElement.getAttribute("data-map")
                        var settingsMap = locationMap.split(",")
                        var latMap = Number(settingsMap[0])
                        var lngMap = Number(settingsMap[1])
                        var academy = { lat: latMap, lng: lngMap }
                        map = new google.maps.Map(document.getElementById('map'), {
                            center: academy,
                            zoom: 18
                        });
                        var marker = new google.maps.Marker({
                            position: academy,
                            map: map,
                                draggable:true

                        })
                        var contentString = "<div id='content'><h1>Simit Sarayı</h1>"+
                            "<p>Bizi Tapin:<a target='_blank' href='http://localhost:50236/Home/Contact'>Contact</a>"+
                            "</div > "
                          var infowindow = new google.maps.InfoWindow({
                         content: contentString
                         });
                      marker.addListener('click', function() {
                             infowindow.open(map, marker);
                      });
                        marker.addListener("dragend", function (event) {
                            var value = event.latLng.lat() + "," + event.latLng.lng();
                            console.log(value)
                            document.getElementById("mainMap").value=value

                        });
                        }
                        



                    </script>
                    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyAPm-ZQUNuMNmZ9DfSXn9fhGFVKQI1lpoQ&callback=initMap"
                            async defer></script>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-primary " />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
